<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailErrorMessage.Text" xml:space="preserve">
    <value>Hiện đã có lỗi khi cố gắng gửi email kiểm tra. Lỗi:&lt;br /&gt;{0}</value>
  </data>
  <data name="EmailSentMessage.Text" xml:space="preserve">
    <value>Đã gửi Mail thành công</value>
  </data>
  <data name="EmailTest.Text" xml:space="preserve">
    <value>Kiểm tra cấu hình SMTP</value>
  </data>
  <data name="plSMTPAuthentication.Help" xml:space="preserve">
    <value>Nhập phương thức chứng thực máy chủ SMTP ( mặc đinh = Nặc danh )</value>
  </data>
  <data name="plSMTPAuthentication.Text" xml:space="preserve">
    <value>Xác thực SMTP:</value>
  </data>
  <data name="plSMTPEnableSSL.Help" xml:space="preserve">
    <value>Được sử dụng cho các dịch vụ SMTP yêu cầu kết nối an toàn (thường là không cần thiết)</value>
  </data>
  <data name="plSMTPEnableSSL.Text" xml:space="preserve">
    <value>SMTP cho phép SSL:</value>
  </data>
  <data name="plSMTPPassword.Help" xml:space="preserve">
    <value>Nhập mật khẩu cho máy chủ SMTP</value>
  </data>
  <data name="plSMTPPassword.Text" xml:space="preserve">
    <value>Mật khẩu SMTP:</value>
  </data>
  <data name="plSMTPServer.Help" xml:space="preserve">
    <value>Nhập địa chỉ máy chủ SMTP. Bạn cũng có thể chỉ định một cổng thay thế bằng cách thêm một dấu hai chấm và số cổng (ví dụ như smtp.googlemail.com:587). Nhập tên máy chủ SMTP chỉ sử dụng số cổng mặc định (25)</value>
  </data>
  <data name="plSMTPServer.Text" xml:space="preserve">
    <value>Máy chủ SMTP và cổng:</value>
  </data>
  <data name="plSMTPUsername.Help" xml:space="preserve">
    <value>Nhập tên đăng nhập máy chủ SMTP</value>
  </data>
  <data name="plSMTPUsername.Text" xml:space="preserve">
    <value>Tên đăng nhập SMTP:</value>
  </data>
  <data name="SMTP.Text" xml:space="preserve">
    <value>Cấu hình máy chủ SMTP</value>
  </data>
  <data name="SMTPAnonymous.Text" xml:space="preserve">
    <value>Nặc danh</value>
  </data>
  <data name="SMTPBasic.Text" xml:space="preserve">
    <value>Cơ bản</value>
  </data>
  <data name="SMTPNTLM.Text" xml:space="preserve">
    <value>NTLM</value>
  </data>
  <data name="SmtpServerWarning.Text" xml:space="preserve">
    <value>Bạn đang cố gắng sử dụng một cổng SMTP tùy chỉnh với các cài đặt trường hợp của bạn là tin tưởng mực độ vừa, bạn cần liên hệ với nhà cung cấp host của bạn để đảm bảo rằng thiết lập này có thể làm việc một cách chính xác trên máy chủ.</value>
  </data>
</root>